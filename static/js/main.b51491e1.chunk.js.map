{"version":3,"sources":["components/GameCard/index.js","components/Header/index.js","hooks/useGameBoard/index.js","components/GameArea/index.js","App.js","reportWebVitals.js","index.js"],"names":["GameCard","cardData","index","clickHandler","isClosed","url","name","className","onClick","alt","src","Profile","useAuth0","user","isAuthenticated","isLoading","console","log","Header","clearBoard","loginWithRedirect","logout","loginButton","authButton","returnTo","window","location","origin","STATE_LOCAL_STORAGE","GameArea","useState","cardConfig","gameCards","setGameCards","clearedBoard","map","picture","localStorage","removeItem","loadBoardFromStorage","storedState","JSON","parse","getItem","newBoard","player","i","Boolean","useGameBoard","clickPicture","newCards","setItem","stringify","card","Number","board","useEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b51491e1.chunk.js","sourcesContent":["import './GameCard.css';\n\nconst GameCard = ({cardData, index, clickHandler}) => {\n  const { isClosed, url, name } = cardData;\n  return <div className=\"picture\" onClick={() => clickHandler(index)}>\n    <img \n      alt={index}\n      className='cardImage'\n      src={url}\n    />\n    {isClosed ? <div className=\"closeImage\">X</div> : null}\n  </div>\n}\n\nexport default GameCard;","import './Header.css';\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Profile = () => {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  if (isLoading) {\n    return <div>\n      Loading\n    </div>\n  };\n  console.log(user);\n  return (\n    isAuthenticated && (\n      <div>\n        <h2>{user.name}</h2>\n      </div>\n    )\n  );\n}\n\n\n\nconst Header = ({ clearBoard }) => {\n  const logoutHandler = () => {\n    logout({ returnTo: window.location.origin});\n    clearBoard();\n  }\n  const { loginWithRedirect, logout, isAuthenticated, isLoading } = useAuth0();\n  const loginButton = <button onClick={() => loginWithRedirect()}>Login</button>\n  const logoutButton = <button onClick={logoutHandler}>Logout</button>\n  const authButton = !isLoading && (isAuthenticated ? logoutButton : loginButton)\n  return <section>\n    <button onClick={clearBoard}>Reset</button>\n    { authButton }\n    <Profile />\n  </section>\n}\n\nexport default Header","import { useState, useEffect } from 'react';\nimport cardConfig from '@src/cards.json';\n\nconst STATE_LOCAL_STORAGE = 'boardState';\n\nconst useGameBoard = () => {\n  const [gameCards, setGameCards] = useState(cardConfig);\n\n  const clearBoard = () => {\n    const clearedBoard = gameCards.map((picture) => ({\n      ...picture,\n      isClosed: false,\n    }));\n    setGameCards(clearedBoard);\n    localStorage.removeItem(STATE_LOCAL_STORAGE);\n  }\n\n  const loadBoardFromStorage = () => {\n    const storedState = JSON.parse(localStorage.getItem(STATE_LOCAL_STORAGE))\n    if (storedState) {\n      const newBoard = gameCards.map((player, i) => {\n        return {\n          ...player,\n          isClosed: Boolean(storedState[i]),\n        };\n      });\n      setGameCards(newBoard);\n    };\n  };\n\n  return {\n    clearBoard,\n    gameCards,\n    setGameCards,\n    loadBoardFromStorage,\n  }\n}\n\nexport { useGameBoard };","import { useEffect } from 'react';\nimport './GameArea.css';\nimport GameCard from '@components/GameCard';\nimport Header from '@components/Header';\nimport { useGameBoard } from '@hooks/useGameBoard';\n\nconst STATE_LOCAL_STORAGE = 'boardState';\n\nconst GameArea = () => {\n  const {gameCards, setGameCards, clearBoard, loadBoardFromStorage } = useGameBoard();\n\n  const clickPicture = (index) => {\n    const newCards = [...gameCards];\n    newCards[index].isClosed = !newCards[index].isClosed;\n    setGameCards(newCards);\n    localStorage.setItem(STATE_LOCAL_STORAGE, JSON.stringify(newCards.map(card => Number(!!card.isClosed))))\n  };\n\n  const board = gameCards.map((picture, i) => {\n    return <GameCard \n      key={i} \n      index={i} \n      cardData={picture} \n      clickHandler={clickPicture}\n      />\n  })\n\n  useEffect(loadBoardFromStorage);\n\n  return (\n    <>\n      <Header clearBoard={clearBoard} />\n      <div className=\"wrapper\">\n        {board}\n      </div>\n    </>\n  );\n}\n\nexport default GameArea;","import './App.css';\nimport GameArea from '@components/GameArea';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GameArea />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nReactDOM.render(\n  <Auth0Provider\n    domain=\"dev-l35vsdvp.us.auth0.com\"\n    clientId=\"YiwT0ZWCFLSzLWDyLj4BKILPXYYqD8Tg\"\n    redirectUri={window.location.origin}\n  >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}